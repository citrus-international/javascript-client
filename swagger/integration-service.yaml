swagger: '2.0'
info:
  title: Citrus Integration API
  description: Citrus Integration API
  version: 0.0.1
host: integration.citrusad.com
schemes:
  - https
securityDefinitions:
  TokenSecurity:
    description: |
      For accessing the API a valid JWT token must be passed in all queries in
      the 'Authorization' header. The following syntax must be used in the
      'Authorization' header.

      Bearer xxx.yyy.zzz
    type: apiKey
    name: Authorization
    in: header
security:
  - TokenSecurity: []
basePath: /v1
produces:
  - application/json
paths:
  /ads/generate:
    post:
      summary: Generate an Ad
      description: >
        Generates and returns ads.


        To receive relevant ads, a context object should be provided as input.
        The Context object includes information

        about where the ad is going to be shown and to whom.
      operationId: generateProductAds
      parameters:
        - in: body
          name: context
          required: true
          schema:
            $ref: '#/definitions/Context'
      responses:
        '200':
          description: |
            On success returns a list of product ads.
          schema:
            $ref: '#/definitions/GenerateAdsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/ads/{adId}':
    get:
      summary: Retrieve an Ad
      description: |
        Retrieves an Ad.
      operationId: getProductAd
      security: []
      parameters:
        - in: path
          name: adId
          type: string
          required: true
      responses:
        '200':
          description: >
            On success returns information about a previously generated product
            ad.
          schema:
            $ref: '#/definitions/ProductAd'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/resource/second-c/{adId}':
    get:
      summary: Report an Ad click
      description: >
        Reports a click for an Ad.


        A Click should be reported whenever a user clicks on an Ad.


        Similar to impressions, the Product Ad ID must be included in the path
        of the request.
      operationId: reportClick
      security: []
      parameters:
        - name: adId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/resource/first-i/{adId}':
    get:
      summary: Report an Ad impression
      description: >
        Reports an impression for an Ad.


        An impression should be reported whenever a user views an Ad.


        When reporting an impression, the Product Ad ID that was provided when
        generating the ad must be included

        in the path of the request.
      operationId: reportImpression
      security: []
      parameters:
        - name: adId
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /catalogs:
    post:
      summary: Create or Update Catalogs
      description: |
        Creates or Updates the list of provided catalogs.
      operationId: pushCatalogs
      parameters:
        - in: body
          name: pushCatalogsRequest
          schema:
            $ref: '#/definitions/PushCatalogsRequest'
          required: true
      responses:
        '200':
          description: >-
            Returns a list of Catalogs with generated IDs in the same order they
            were submitted
          schema:
            $ref: '#/definitions/PushCatalogsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    get:
      summary: Retrieve a list of Catalogs
      description: >
        Returns a list of catalogs. The catalogs are returned sorted by creation
        date with

        the most recent catalogs appearing first. If teamId is set as a
        parameter, catalogs for

        that teamId will be returned, otherwise, catalogs with provided
        catalogIds will be retunred.
      operationId: getCatalogs
      parameters:
        - name: teamId
          in: query
          type: string
        - name: limit
          in: query
          type: integer
          default: 5
          format: int32
        - name: skip
          in: query
          type: integer
          default: 5
          format: int32
        - name: catalogIds
          in: query
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns a list of Catalogs
          schema:
            $ref: '#/definitions/GetCatalogsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/catalogs/{catalogId}':
    get:
      summary: Get a Catalog
      description: |
        Retrieves the catalog.
        Provide the id used in the previous request when creating the catalog.
      operationId: getCatalog
      parameters:
        - in: path
          name: catalogId
          type: string
          required: true
      responses:
        '200':
          description: Returns a Catalog
          schema:
            $ref: '#/definitions/Catalog'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete a Catalog
      description: |
        Deletes the catalog.
        Provide the id used in the previous request when creating the catalog.
      operationId: deleteCatalog
      parameters:
        - in: path
          name: catalogId
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /catalog-products:
    post:
      summary: Create or Update CatalogProducts
      description: |
        Creates or Updates the list of provided catalogProducts.
      operationId: pushCatalogProducts
      parameters:
        - in: body
          name: pushCatalogProductsRequest
          schema:
            $ref: '#/definitions/PushCatalogProductsRequest'
          required: true
      responses:
        '200':
          description: >-
            Returns a list of CatalogProducts with generated IDs in the same
            order they were submitted
          schema:
            $ref: '#/definitions/PushCatalogProductsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    get:
      summary: Retrieve a list of CatalogProducts
      description: >
        Returns a list of catalogProducts. The catalogProducts are returned
        sorted by creation date with

        the most recent catalogProducts appearing first. If teamId is set as a
        parameter, catalogProducts

        for that teamId will be returned, otherwise, catalogProducts with
        provided catalogId and gtins will be returned.
      operationId: getCatalogProducts
      parameters:
        - name: limit
          in: query
          type: integer
          default: 5
          format: int32
        - name: skip
          in: query
          type: integer
          default: 5
          format: int32
        - name: catalogId
          in: query
          type: string
          required: true
        - name: gtins
          in: query
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns a list of CatalogProducts
          schema:
            $ref: '#/definitions/GetCatalogProductsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/catalog-products/{catalogId}/{gtin}':
    get:
      summary: Get a CatalogProduct
      description: >
        Retrieves the catalogProduct.

        Provide the id used in the previous request when creating the
        catalogProduct.
      operationId: getCatalogProduct
      parameters:
        - in: path
          name: catalogId
          type: string
          required: true
        - in: path
          name: gtin
          type: string
          required: true
      responses:
        '200':
          description: Returns a CatalogProduct
          schema:
            $ref: '#/definitions/CatalogProduct'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete a CatalogProduct
      description: >
        Deletes the catalogProduct.

        Provide the id used in the previous request when creating the
        catalogProduct.
      operationId: deleteCatalogProduct
      parameters:
        - in: path
          name: catalogId
          type: string
          required: true
        - in: path
          name: gtin
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /customers:
    post:
      summary: Create or Update Customers
      description: |
        Creates or Updates the list of provided customers.
      operationId: pushCustomers
      parameters:
        - in: body
          name: pushCustomersRequest
          schema:
            $ref: '#/definitions/PushCustomersRequest'
          required: true
      responses:
        '200':
          description: >
            Returns a list of Customers with generated IDs in the same order
            they were submitted.
          schema:
            $ref: '#/definitions/PushCustomersResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    get:
      summary: Retrieve a list of Customers
      description: >
        Returns a list of customers. The customers are returned sorted by
        creation date with

        the most recent customers appearing first. If teamId is set as a
        parameter, customers for

        that teamId will be returned, otherwise, customers with provided
        customerIds will be retunred.
      operationId: getCustomers
      parameters:
        - name: teamId
          in: query
          type: string
        - name: limit
          in: query
          type: integer
          default: 5
          format: int32
        - name: skip
          in: query
          type: integer
          default: 0
          format: int32
        - name: customerIds
          in: query
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns a list of Customers
          schema:
            $ref: '#/definitions/GetCustomersResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/customers/{customerId}':
    get:
      summary: Retrieve a Customer
      description: |
        Retrieves the customer.
        Provide the id used in the previous request when creating the customer.
      operationId: getCustomer
      parameters:
        - in: path
          name: customerId
          type: string
          required: true
      responses:
        '200':
          description: Returns a Customer
          schema:
            $ref: '#/definitions/Customer'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete a Customer
      description: |
        Deletes the customer.
        Provide the id used in the previous request when creating the customer.
      operationId: deleteCustomer
      parameters:
        - in: path
          name: customerId
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /orders:
    post:
      summary: Create or Update Orders
      description: |
        Creates or Updates the list of provided orders.
      operationId: pushOrders
      parameters:
        - in: body
          name: pushOrdersRequest
          schema:
            $ref: '#/definitions/PushOrdersRequest'
          required: true
      responses:
        '200':
          description: >-
            Returns a list of Orders with generated IDs in the same order they
            were submitted
          schema:
            $ref: '#/definitions/PushOrdersResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    get:
      summary: Retrieve a list of Orders
      description: >
        Returns a list of orders. The orders are returned sorted by creation
        date with

        the most recent orders appearing first. If teamId is set as a parameter,
        orders for that

        teamId will be returned, otherwise, orders with provided orderIds will
        be retunred.
      operationId: getOrders
      parameters:
        - name: teamId
          in: query
          type: string
        - name: limit
          in: query
          type: integer
          default: 5
          format: int32
        - name: skip
          in: query
          type: integer
          default: 5
          format: int32
        - name: orderIds
          in: query
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns a list of Orders
          schema:
            $ref: '#/definitions/GetOrdersResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/orders/{orderId}':
    get:
      summary: Retrieve an Order
      description: |
        Retrieves an order.
        Provide the id used in the previous request when creating the orders.
      operationId: getOrder
      parameters:
        - in: path
          name: orderId
          type: string
          required: true
      responses:
        '200':
          description: Returns an Order
          schema:
            $ref: '#/definitions/Order'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete an Order
      description: |
        Deletes the orders.
        Provide the id used in the previous request when creating the orders.
      operationId: deleteOrder
      parameters:
        - in: path
          name: orderId
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /products:
    post:
      summary: Create or Update Products
      description: |
        Creates or Updates the list of provided products.
      operationId: pushProducts
      parameters:
        - name: teamId
          in: query
          type: string
          required: true
        - in: body
          name: pushProductsRequest
          schema:
            $ref: '#/definitions/PushProductsRequest'
          required: true
      responses:
        '200':
          description: >-
            Returns a list of Products with generated IDs in the same order when
            submitted.
          schema:
            $ref: '#/definitions/PushProductsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    get:
      summary: Retrieve a list of Products
      description: >
        Returns a list of products. The products are returned sorted by creation
        date with

        the most recent products appearing first.
      operationId: getProducts
      parameters:
        - name: teamId
          in: query
          type: string
          required: true
        - name: limit
          in: query
          type: integer
          default: 5
          format: int32
        - name: skip
          in: query
          type: integer
          default: 5
          format: int32
        - name: gtins
          in: query
          type: array
          items:
            type: string
      responses:
        '200':
          description: Returns a list of Products
          schema:
            $ref: '#/definitions/GetProductsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  '/products/{gtin}':
    get:
      summary: Retrieve a Product
      description: |
        Retrieves the product.
        Provide the id used in the previous request when creating the product.
      operationId: getProduct
      parameters:
        - in: path
          name: gtin
          description: The GTIN of the product
          type: string
          required: true
        - in: query
          name: teamId
          description: Team id with which the product has been submitted with.
          type: string
          required: true
      responses:
        '200':
          description: Returns a Product
          schema:
            $ref: '#/definitions/Product'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete a Product
      description: |
        Deletes the product.
        Provide the id used in the previous request when creating the product.
      operationId: deleteProduct
      parameters:
        - in: path
          name: gtin
          description: The GTIN of the product
          type: string
          required: true
        - in: query
          name: teamId
          description: Team id with which the product has been submitted with.
          type: string
          required: true
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /teams:
    get:
      summary: Retrieve list of all connected teams
      description: >
        Returns a list of all connected teams that this team can do operations
        on behalf of.
      operationId: getTeams
      responses:
        '200':
          description: Returns a list of connected teams info
          schema:
            $ref: '#/definitions/GetTeamsResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
  /authenticate:
    get:
      summary: Test if JWT authentication works or not
      description: |
        Returns a message indicating which team the current JWT is working as
      operationId: testAuthentication
      responses:
        '200':
          description: >-
            A successful message indicating which team the current JWT is
            working
          schema:
            type: string
        '400':
          $ref: '#/responses/ErrorResponse'
        '401':
          $ref: '#/responses/ErrorResponse'
        '403':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
        '429':
          $ref: '#/responses/ErrorResponse'
        '500':
          $ref: '#/responses/ErrorResponse'
        '502':
          $ref: '#/responses/ErrorResponse'
        '503':
          $ref: '#/responses/ErrorResponse'
        '504':
          $ref: '#/responses/ErrorResponse'
        default:
          $ref: '#/responses/ErrorResponse'
definitions:
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
      additionalInfo:
        type: array
        items:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
              enum:
                - Required
                - Malformed
                - Unknown
  Context:
    type: object
    required:
      - teamId
      - catalogId
    properties:
      catalogId:
        type: string
      customerId:
        type: string
      searchTerm:
        type: string
      productFilters:
        type: array
        items:
          type: array
          items:
            type: string
      categoryHierarchy:
        type: array
        items:
          type: string
      substitutedProductGtin:
        type: string
      pageType:
        type: string
        enum:
          - Home
          - Category
          - Search
          - Specials
          - PastOrder
          - Substitution
          - Samples
      currentCartItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
      maxNumberOfAds:
        type: integer
  GenerateAdsResponse:
    type: object
    properties:
      ads:
        type: array
        items:
          $ref: '#/definitions/ProductAd'
  ProductAd:
    type: object
    required:
      - gtin
      - id
    properties:
      id:
        type: string
      gtin:
        type: string
      discount:
        $ref: '#/definitions/Discount'
      expiry:
        type: string
        format: date-time
  Purchase:
    type: object
    required:
      - orderId
      - productAdIds
    properties:
      orderId:
        type: string
      productAdIds:
        type: array
        minItems: 1
        items:
          type: string
  Discount:
    type: object
    properties:
      amount:
        type: number
      minPrice:
        type: number
      maxPerCustomer:
        type: integer
  Catalog:
    type: object
    required:
      - name
      - teamId
    properties:
      id:
        type: string
      teamId:
        type: string
      name:
        type: string
  GetCatalogsResponse:
    type: object
    required:
      - catalogs
    properties:
      catalogs:
        type: array
        items:
          $ref: '#/definitions/Catalog'
  PushCatalogsRequest:
    type: object
    required:
      - catalogs
    properties:
      catalogs:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Catalog'
  PushCatalogsResponse:
    type: object
    required:
      - catalogs
    properties:
      catalogs:
        type: array
        items:
          $ref: '#/definitions/Catalog'
  UpdateCatalogRequest:
    type: object
    required:
      - catalog
    properties:
      catalog:
        $ref: '#/definitions/Catalog'
  CatalogProduct:
    type: object
    required:
      - gtin
      - catalogId
    properties:
      teamId:
        type: string
      catalogId:
        type: string
      gtin:
        type: string
      inventory:
        type: number
      price:
        type: number
      categoryHierarchy:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
      filters:
        type: array
        items:
          type: string
      profit:
        type: number
  GetCatalogProductsResponse:
    type: object
    required:
      - catalogProducts
    properties:
      catalogProducts:
        type: array
        items:
          $ref: '#/definitions/CatalogProduct'
  PushCatalogProductsRequest:
    type: object
    required:
      - catalogProducts
    properties:
      catalogProducts:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/CatalogProduct'
  PushCatalogProductsResponse:
    type: object
    required:
      - catalogProducts
    properties:
      catalogProducts:
        type: array
        items:
          $ref: '#/definitions/CatalogProduct'
  UpdateCatalogProductRequest:
    type: object
    required:
      - catalogProduct
    properties:
      catalog:
        $ref: '#/definitions/CatalogProduct'
  Customer:
    type: object
    required:
      - teamId
    properties:
      id:
        type: string
      teamId:
        type: string
      yearOfBirth:
        type: integer
      gender:
        type: string
        enum:
          - Male
          - Female
          - Other
      suburb:
        type: string
      postcode:
        type: string
  GetCustomersResponse:
    type: object
    required:
      - customers
    properties:
      customers:
        type: array
        items:
          $ref: '#/definitions/Customer'
  PushCustomersRequest:
    type: object
    required:
      - customers
    properties:
      customers:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Customer'
  PushCustomersResponse:
    type: object
    required:
      - customers
    properties:
      customers:
        type: array
        items:
          $ref: '#/definitions/Customer'
  UpdateCustomerRequest:
    type: object
    required:
      - customer
    properties:
      customer:
        $ref: '#/definitions/Customer'
  GetOrdersResponse:
    type: object
    required:
      - orders
    properties:
      orders:
        type: array
        items:
          $ref: '#/definitions/Order'
  Order:
    type: object
    required:
      - orderDate
      - orderItems
      - teamId
    properties:
      id:
        type: string
      teamId:
        type: string
      customerId:
        type: string
      orderDate:
        type: string
        format: date-time
      orderItems:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/OrderItem'
  OrderItem:
    type: object
    required:
      - gtin
      - quantity
      - regularUnitPrice
      - totalOrderItemPriceAfterDiscounts
    properties:
      gtin:
        type: string
      quantity:
        type: number
      regularUnitPrice:
        type: number
      totalOrderItemPriceAfterDiscounts:
        type: number
      adId:
        type: string
      citrusDiscountAmount:
        type: number
      substitutedFor:
        $ref: '#/definitions/OrderItem'
  PushOrdersRequest:
    type: object
    required:
      - orders
    properties:
      orders:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Order'
  PushOrdersResponse:
    type: object
    required:
      - orders
    properties:
      orders:
        type: array
        items:
          $ref: '#/definitions/Order'
  UpdateOrderRequest:
    type: object
    required:
      - order
    properties:
      order:
        $ref: '#/definitions/Order'
  GetProductsResponse:
    type: object
    required:
      - products
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
  Product:
    type: object
    required:
      - gtin
    properties:
      gtin:
        type: string
      name:
        type: string
      size:
        type: string
      images:
        type: array
        items:
          type: string
  PushProductsRequest:
    type: object
    required:
      - products
    properties:
      products:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/Product'
  PushProductsResponse:
    type: object
    required:
      - products
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/Product'
  UpdateProductRequest:
    type: object
    required:
      - product
    properties:
      product:
        $ref: '#/definitions/Product'
  GetTeamsResponse:
    type: object
    properties:
      teams:
        type: array
        items:
          type: object
          properties:
            citrusTeamId:
              type: string
            thirdPartyTeamId:
              type: string
            permissions:
              type: array
              items:
                $ref: '#/definitions/Permission'
  Permission:
    type: object
    required:
      - domain
      - object
      - accesses
    properties:
      domain:
        type: string
        enum:
          - CUSTOMER_DATA
          - ORDER_DATA
          - CATALOG_DATA
          - PRODUCT_DATA
          - CAMPAIGN_DATA
          - REQUEST_ADS
          - CATALOG_PRODUCT_DATA
          - PERMISSION_DATA
          - LINK_DATA
          - ACCOUNT_DATA
          - CONTACT_DATA
          - REPORTING_DATA
      accesses:
        type: array
        items:
          type: string
          enum:
            - READ_WRITE
            - READ_ONLY
responses:
  ErrorResponse:
    description: An error response.
    schema:
      $ref: '#/definitions/ErrorResponse'

